package mnj.ont.model.services;

import java.util.Map;

import javax.servlet.http.HttpSession;

import javax.swing.text.Style;

import mnj.ont.model.lov.views.popupVOImpl;
import mnj.ont.model.services.common.CuttingProductionAM;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewObject;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;

import javax.faces.context.ExternalContext;
import javax.faces.context.FacesContext;

import oracle.adf.share.ADFContext;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 29 11:11:30 PKT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CuttingProductionAMImpl extends ApplicationModuleImpl implements CuttingProductionAM {
    /**
     * This is the default constructor (do not remove).
     */
    public CuttingProductionAMImpl() {
    }

    /**
     * Container's getter for HederVO1.
     * @return HederVO1
     */
    public ViewObjectImpl getHederVO1() {
        return (ViewObjectImpl)findViewObject("HederVO1");
    }

    /**
     * Container's getter for LineVO1.
     * @return LineVO1
     */
    public ViewObjectImpl getLineVO1() {
        return (ViewObjectImpl)findViewObject("LineVO1");
    }

    /**
     * Container's getter for DetaiView1.
     * @return DetaiView1
     */
    public ViewObjectImpl getDetaiView1() {
        return (ViewObjectImpl)findViewObject("DetaiView1");
    }

    /**
     * Container's getter for BundleVO1.
     * @return BundleVO1
     */
    public ViewObjectImpl getBundleVO1() {
        return (ViewObjectImpl)findViewObject("BundleVO1");
    }

    /**
     * Container's getter for DetailVO1.
     * @return DetailVO1
     */
    public ViewObjectImpl getDetailVO1() {
        return (ViewObjectImpl)findViewObject("DetailVO1");
    }

    /**
     * Container's getter for HederLine1.
     * @return HederLine1
     */
    public ViewLinkImpl getHederLine1() {
        return (ViewLinkImpl)findViewLink("HederLine1");
    }

    /**
     * Container's getter for RangeProgrmNobline1.
     * @return RangeProgrmNobline1
     */
    public ViewLinkImpl getRangeProgrmNobline1() {
        return (ViewLinkImpl)findViewLink("RangeProgrmNobline1");
    }

    /**
     * Container's getter for DetailToBandleVL1.
     * @return DetailToBandleVL1
     */
    public ViewLinkImpl getDetailToBandleVL1() {
        return (ViewLinkImpl)findViewLink("DetailToBandleVL1");
    }

    /**
     * Container's getter for DetailToDetailVL1.
     * @return DetailToDetailVL1
     */
    public ViewLinkImpl getDetailToDetailVL1() {
        return (ViewLinkImpl)findViewLink("DetailToDetailVL1");
    }

    public String IssueToFloor(int rangeId) {

        Map sessionScope = ADFContext.getCurrent().getSessionScope();
        String user = (String)sessionScope.get("userId");
        String orgId = (String)sessionScope.get("orgId");
        String respId = (String)sessionScope.get("respId");
        String respAppl = (String)sessionScope.get("respAppl");

        String status = null;
        String stmt =
            "BEGIN  :1 := MNJ_CUT_MOVE_TRANSACTION.MATERIAL_ISSUE(:2 ,:3, :4, :5, :6); end;";
        java.sql.CallableStatement cs =
            getDBTransaction().createCallableStatement(stmt, 1);
        System.out.println("Range Id --->" + rangeId);

        try {

            cs.setInt(2, rangeId); //Range No
            cs.setString(3, orgId); //ORG ID
            cs.setString(4, respId); //responsibility ID
            cs.setString(5, respAppl); ///application ID
            cs.setString(6, user); //User Id
            cs.registerOutParameter(1,
                                    oracle.jdbc.OracleTypes.VARCHAR); //status

            cs.execute();
            status = cs.getString(1);
            cs.close();

        } catch (Exception e) {
            status = e.getMessage();
        }
        return status;
    }

    public String callPost(int rangeId) {

        Map sessionScope = ADFContext.getCurrent().getSessionScope();
        String user = (String)sessionScope.get("userId");
        String orgId = (String)sessionScope.get("orgId");
        String respId = (String)sessionScope.get("respId");
        String respAppl = (String)sessionScope.get("respAppl");

        String status = null;
        String stmt =
            "BEGIN  :1 := MNJ_MFG_CUT_PROD_PKG.CALL_POST(:2 ,:3, :4, :5, :6); end;";
        java.sql.CallableStatement cs =
            getDBTransaction().createCallableStatement(stmt, 1);
        System.out.println("Range Id --->" + rangeId);

        try {

            cs.setInt(2, rangeId); //Range No
            cs.setString(3, orgId); //ORG ID
            cs.setString(4, respId); //responsibility ID
            cs.setString(5, respAppl); ///application ID
            cs.setString(6, user); //User Id
            cs.registerOutParameter(1,
                                    oracle.jdbc.OracleTypes.VARCHAR); //status

            cs.execute();
            status = cs.getString(1);
            cs.close();

        } catch (Exception e) {
            status = e.getMessage();
        }
        return status;
    }

    public String submitCompletion(int rangeId) {

        Map sessionScope = ADFContext.getCurrent().getSessionScope();
        String user = (String)sessionScope.get("userId");
        String orgId = (String)sessionScope.get("orgId");
        String respId = (String)sessionScope.get("respId");
        String respAppl = (String)sessionScope.get("respAppl");

        String status = null;
        String stmt =
            "BEGIN  :1 := MNJ_CUT_MOVE_TRANSACTION.SUBMIT_REQUEST_COMPLETION(:2 ,:3, :4, :5, :6); end;";
        java.sql.CallableStatement cs =
            getDBTransaction().createCallableStatement(stmt, 1);


        try {

            cs.setInt(2, rangeId); //Range No
            cs.setString(3, orgId); //ORG ID
            cs.setString(4, respId); //responsibility ID
            cs.setString(5, respAppl); ///application ID
            cs.setString(6, user); //User Id
            cs.registerOutParameter(1,
                                    oracle.jdbc.OracleTypes.VARCHAR); //status

            cs.execute();
            status = cs.getString(1);
            cs.close();

        } catch (Exception e) {
            status = e.getMessage();
        }
        return status;
    }

    /**
     * Container's getter for popupVO1.
     * @return popupVO1
     */
    public popupVOImpl getpopupVO1() {
        return (popupVOImpl)findViewObject("popupVO1");
    }


    public void populateOrderLines1(String style) {
        ViewObject populatevo = getpopupVO1();
    
        String aa = getstyle();
        populatevo.setWhereClause("POC_ID = " + "'" + aa + "'");
        System.out.println("sale order id change test usman in AM-->" + aa);
        
        populatevo.executeQuery();
        System.out.println(populatevo.getQuery());
    } //end of populateOrderLines method


    public void findSelLines1() {
        System.out.println("looop2----->");

        ViewObject vo = getpopupVO1();


        RowSetIterator it = vo.createRowSetIterator("aa");

        while (it.hasNext()) {

            Row r = it.next();
            System.out.println("popup " + r.getAttribute("MultiSelect"));
            try {
                r.getAttribute("MultiSelect").toString();
                System.out.println("popup after call " +
                                   r.getAttribute("MultiSelect"));
                populateLines(r);
                System.out.println("looop----->");
                System.out.println("multi select looop--->" +
                                   r.getAttribute("MultiSelect").toString());
            } catch (Exception e) {
                ;
            }

            //populateLines(r);

        }

        it.closeRowSetIterator();


    } //findSelLines

    public void populateLines(Row poprow) {

        Row linerow = createLines();
        linerow.setAttribute("BpoId", getPopulateValue(poprow, "BpoId"));
        linerow.setAttribute("ItemDescription",
                             getPopulateValue(poprow, "ItemDescription"));
        linerow.setAttribute("Obrefno", getPopulateValue(poprow, "Bpo"));
        linerow.setAttribute("QtyWithExtra",
                             getPopulateValue(poprow, "ExtraPer"));
        linerow.setAttribute("Orderqty",
                             getPopulateValue(poprow, "OrderedQty"));
        linerow.setAttribute("BalanceProduction",
                             getPopulateValue(poprow, "BelanceProduction"));
        linerow.setAttribute("PreviousProduction",
                             getPopulateValue(poprow, "PreviousProduction"));
        linerow.setAttribute("CutjobId",
                             getPopulateValue(poprow, "WipEntityId"));


    } //end of populateLines

    public String getPopulateValue(Row r, String columnName) {

        String value = null;
        try {
            value = r.getAttribute(columnName).toString();
        } catch (Exception e) {
            ;
        }
        return value;
    }

    public Row createLines() {

        ViewObject vo = getDetaiView1();
        Row row = vo.createRow();
        vo.insertRow(row);
        row.setNewRowState(Row.STATUS_INITIALIZED);
        return row;
    } //end of createHeader

    public String getstyle() {


        ViewObject vo = getHederVO1();
        String PocId = null;
        try {

            PocId = vo.getCurrentRow().getAttribute("PocId").toString();
            System.out.println("PocId is:"+PocId);

        } catch (Exception e) {
            // TODO: Add catch code
            System.out.println("PocId is:"+PocId);
            ;
        }
        return PocId;
    }


    public void TotalCutPlanQuantity() {

        ViewObject vo = getHederVO1();

        String CutPlanQuantity = TotalCutPlanQuantityCalc();

        try {

            System.out.println("Before Setting CutPlanQuantity  --->" +
                               CutPlanQuantity);

            vo.getCurrentRow().setAttribute("OrderQty", CutPlanQuantity);

            CuttingProductionAssignment();

        } catch (Exception e) {
            // TODO: Add catch code
            ;
        }

    }

    public String TotalCutPlanQuantityCalc() {

        String CutPlanNo = getCutPlanNo();

        String Quantity = null;
        String stmt =
            "BEGIN  :1 := MNJ_MFG_CUT_PROD_PKG.TOTAL_CUT_PLAN_QTY(:2); end;";
        java.sql.CallableStatement cs =
            getDBTransaction().createCallableStatement(stmt, 1);
        System.out.println("CutPlanNo  --->" + CutPlanNo);

        try {

            cs.setString(2, CutPlanNo); //Cut Plan Number
            cs.registerOutParameter(1,
                                    oracle.jdbc.OracleTypes.VARCHAR); //status

            cs.execute();
            Quantity = cs.getString(1);
            cs.close();

        } catch (Exception e) {
            Quantity = null;
        }

        System.out.println("Quantity  --->" + Quantity);

        return Quantity;
    }


    public void CuttingProductionAssignment() {

        getDBTransaction().commit();

        String RangeId = getRangeId();

        String stmt =
            "BEGIN  MNJ_MFG_CUT_PROD_PKG.CuttingProductionAssignment(:1); end;";
        java.sql.CallableStatement cs =
            getDBTransaction().createCallableStatement(stmt, 1);
        System.out.println("RangeId  --->" + RangeId);

        try {

            cs.setString(1, RangeId); //RangeId Number

            cs.execute();

            cs.close();

        } catch (Exception e) {
            ;
        }

        ViewObject vo = getDetaiView1();
        vo.executeQuery();

        System.out.println("RangeId  ---> " + RangeId);
    }

    /// Range Id

    public String getRangeId() {


        ViewObject vo = getHederVO1();
        String RangeId = null;
        try {

            RangeId = vo.getCurrentRow().getAttribute("RangeId").toString();

        } catch (Exception e) {
            // TODO: Add catch code
            ;
        }
        return RangeId;
    }


    /// Get Cut Plan Number

    public String getCutPlanNo() {


        ViewObject vo = getHederVO1();
        String CutPlan = null;
        try {

            CutPlan =
                    vo.getCurrentRow().getAttribute("Attribute15").toString();

        } catch (Exception e) {
            // TODO: Add catch code
            ;
        }
        return CutPlan;
    }


    /* Method to Populate WHO Column */

    public void setSessionValues(String orgId, String userId, String respId,
                                 String respAppl) {


        if (userId != null) {

            FacesContext fctx = FacesContext.getCurrentInstance();
            ExternalContext ectx = fctx.getExternalContext();
            HttpSession userSession = (HttpSession)ectx.getSession(false);
            userSession.setAttribute("userId", userId);
            userSession.setAttribute("orgId", orgId);
            userSession.setAttribute("respId", respId);
            userSession.setAttribute("respAppl", respAppl);
        }
    }

    /* End Method to Populate WHO Column */


}
